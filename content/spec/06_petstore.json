{
  "swagger": "2.0",
  "info": {
    "title": "Petstore API",
    "version": "1.0.5",
    "description": "This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "paths": {
    "/pets": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {}
          }
        },
        "summary": "Returns all pets in a store",
        "tags": [
          "Pet"
        ],
        "description": "Returns a list of a all pets in a store.",
        "operationId": "getAllPets"
      }
    },
    "/pet": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        },
        "summary": "Add a new pet",
        "description": "Adds a new pet to the store.",
        "operationId": "addNewPet",
        "tags": [
          "Pet"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {}
          }
        ]
      }
    },
    "/store/order": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {}
          }
        },
        "summary": "Create an order",
        "tags": [
          "Store"
        ],
        "operationId": "placeOrder",
        "description": "Create an order in the store. ",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {}
          }
        ]
      }
    },
    "/pet/{petId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {}
          }
        },
        "summary": "Return a pet by ID",
        "description": "Returns a single pet.",
        "operationId": "getPetById",
        "tags": [
          "Pet"
        ]
      },
      "parameters": [
        {
          "name": "petId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/store/order/{orderId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {}
          }
        },
        "summary": "Return an order by ID",
        "description": "Return a single order",
        "operationId": "getOrderByID",
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "orderId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    }
  },
  "basePath": "/v2",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Pet",
      "description": "Everything about your pet. "
    },
    {
      "name": "Store",
      "description": "All about the store"
    }
  ],
  "definitions": {
    "Pet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": ""
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "required": [
        "name",
        "photoUrls"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quanitity": {
          "type": "integer",
          "format": "int64"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean"
        }
      }
    }
  }
}